{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ImproTic2-BackEnd\\\\src\\\\index.js\";\nimport { render } from '@testing-library/react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ApolloCliente, { gql } from \"apollo-boost\";\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ApolloProvider, ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: 'https://api.github.com/graphql'\n});\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  // get the authentication token from local storage if it exists\n  const token = process.env.REACT_APP_GITHUB_PERSONAL_TOKEN; // return the headers to the context so httpLink can read them\n\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 17\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/ImproTic2-BackEnd/src/index.js"],"names":["render","ReactDOM","App","reportWebVitals","ApolloCliente","gql","React","BrowserRouter","Router","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","setContext","httpLink","uri","authLink","_","headers","token","process","env","REACT_APP_GITHUB_PERSONAL_TOKEN","authorization","client","link","concat","cache","document","getElementById"],"mappings":";AACA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,IAAsBC,GAAtB,QAAgC,cAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,aAJF,QAKO,gBALP;AAMA,SAASC,UAAT,QAA2B,6BAA3B;;AAGA,MAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC9BI,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGH,UAAU,CAAC,CAACI,CAAD,WAAoB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC9C;AACA,QAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,+BAA1B,CAF8C,CAG9C;;AACA,SAAO;AACLJ,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPK,MAAAA,aAAa,EAAEJ,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AADJ,GAAP;AAMD,CAV0B,CAA3B;AAYA,MAAMK,MAAM,GAAG,IAAId,YAAJ,CAAiB;AAC9Be,EAAAA,IAAI,EAAET,QAAQ,CAACU,MAAT,CAAgBZ,QAAhB,CADwB;AAE9Ba,EAAAA,KAAK,EAAE,IAAIf,aAAJ;AAFuB,CAAjB,CAAf;AAMAX,QAAQ,CAACD,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAwB4B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAxB,E,CAGA;AACA;AACA;;AACA1B,eAAe","sourcesContent":["\nimport { render } from '@testing-library/react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ApolloCliente,{gql} from \"apollo-boost\";\n\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {\n  ApolloProvider,\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n\nconst httpLink = createHttpLink({\n  uri: 'https://api.github.com/graphql'\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = process.env.REACT_APP_GITHUB_PERSONAL_TOKEN;\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}